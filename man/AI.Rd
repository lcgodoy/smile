% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sai.R
\name{AI}
\alias{AI}
\alias{ai}
\alias{ai_var}
\title{Areal Interpolation}
\usage{
ai(source, target, vars)

ai_var(source, target, vars, vars_var, sc_vars = FALSE, var_method = "CS")
}
\arguments{
\item{source}{a \code{sf} object - source spatial data.}

\item{target}{a \code{sf} object - target spatial data.}

\item{vars}{a \code{character} representing the variables (observed at the
source) to be estimated at the target data.}

\item{vars_var}{a scalar of type \code{character} representing the name of
the variable in the source dataset that stores the variances of the
variable to be estimated at the target data.}

\item{sc_vars}{boolean indicating whether \code{vars} should be scaled by its
observed variance (if available).}

\item{var_method}{a \code{character} representing the method to approximate
the variance of the AI estimates. Possible values are "CS"
(Cauchy-Schwartz) or "MI" (Moran's I).}
}
\value{
the target (of type \code{sf}) with estimates of the variables
observed at the source data.
}
\description{
This function estimates variables observed at a "source" region
into a "target" region. "Source" and "target" regions represent two
different ways to divide a city, for example. For more details, see
\url{https://lcgodoy.me/smile/articles/sai.html}.
}
\examples{
data(nl_ct)


\dontrun{
nl_ct <- st_transform(nl_ct, 20823)
set.seed(2024)

## outer polygon
nl_outer <- nl_ct |>
 st_geometry() |>
 st_union() |>
 smile:::st_remove_holes()

## creating `target` data
points_nl <- st_sample(x = nl_outer,
                      size = 40)

nl_vor <- do.call(c, points_nl) |>
## voronoi tesselation
  st_voronoi(envelope = nl_outer) |> 
  st_collection_extract(type = "POLYGON") |>
  st_set_crs(st_crs(nl_ct)) |>
  st_intersection(nl_outer) |>
  st_as_sf()

creating id variable
nl_vor <- transform(nl_vor, id = seq_len(NROW(nl_vor)))

## areal interpolation
estimate_comd <-
   ai(source = nl_ct, target = nl_vor,
      vars = "hh_density")

## areal interpolation with uncertainty estimation
estimate_comd <-
   ai_var(source = nl_ct, target = nl_vor,
          vars = "hh_density", vars_var = "var_hhd",
          var_method = "MI")
}

}
